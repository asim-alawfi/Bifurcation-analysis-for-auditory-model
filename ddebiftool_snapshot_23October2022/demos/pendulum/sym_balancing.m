function varargout=sym_balancing(action,varargin)
%% Automatically generated with matlabFunction
% 
%#ok<*DEFNU,*INUSD,*INUSL>

switch action
  case 'ntau'
   varargout{1}=1;
   return
  case 'npar'
   varargout{1}=3;
   return
  case 'tp_del'
   varargout{1}=0;
   return
  case 'maxorder'
   varargout{1}=5;
   return
  case 'directional_derivative'
   varargout{1}=1;
   return
end
ind=varargin{1};
order=varargin{2};
nout=varargin{3};
f=str2func(sprintf('sym_balancing_%s_%d_%d',action,ind,order));
varargout=cell(nout,1);
[varargout{:}]=f(varargin{4:end});




function [out1,out2] = sym_balancing_rhs_1_0(x,v,x_tau,v_tau,a,b,tau,x_d,v_d,x_tau_d,v_tau_d,a_d,b_d,tau_d)
%SYM_BALANCING_RHS_1_0
%    [OUT1,OUT2] = SYM_BALANCING_RHS_1_0(X,V,X_TAU,V_TAU,A,B,TAU,X_D,V_D,X_TAU_D,V_TAU_D,A_D,B_D,TAU_D)

%    This function was generated by the Symbolic Math Toolbox version 8.6.
%    03-May-2022 22:42:24

out1 = v;
if nargout > 1
    out2 = sin(x)-cos(x).*(b.*v_tau+a.*x_tau);
end


function [out1,out2] = sym_balancing_rhs_1_1(x,v,x_tau,v_tau,a,b,tau,x_d,v_d,x_tau_d,v_tau_d,a_d,b_d,tau_d)
%SYM_BALANCING_RHS_1_1
%    [OUT1,OUT2] = SYM_BALANCING_RHS_1_1(X,V,X_TAU,V_TAU,A,B,TAU,X_D,V_D,X_TAU_D,V_TAU_D,A_D,B_D,TAU_D)

%    This function was generated by the Symbolic Math Toolbox version 8.6.
%    03-May-2022 22:42:24

out1 = v_d;
if nargout > 1
    t2 = cos(x);
    out2 = -t2.*(b.*v_tau_d+b_d.*v_tau+a.*x_tau_d+a_d.*x_tau)+t2.*x_d+x_d.*sin(x).*(b.*v_tau+a.*x_tau);
end


function [out1,out2] = sym_balancing_rhs_1_2(x,v,x_tau,v_tau,a,b,tau,x_d,v_d,x_tau_d,v_tau_d,a_d,b_d,tau_d)
%SYM_BALANCING_RHS_1_2
%    [OUT1,OUT2] = SYM_BALANCING_RHS_1_2(X,V,X_TAU,V_TAU,A,B,TAU,X_D,V_D,X_TAU_D,V_TAU_D,A_D,B_D,TAU_D)

%    This function was generated by the Symbolic Math Toolbox version 8.6.
%    03-May-2022 22:42:24

out1 = 0.0;
if nargout > 1
    t2 = cos(x);
    t3 = sin(x);
    t4 = x_d.^2;
    out2 = -t3.*t4-t2.*(b_d.*v_tau_d.*2.0+a_d.*x_tau_d.*2.0)+t2.*t4.*(b.*v_tau+a.*x_tau)+t3.*x_d.*(b.*v_tau_d+b_d.*v_tau+a.*x_tau_d+a_d.*x_tau).*2.0;
end


function [out1,out2] = sym_balancing_rhs_1_3(x,v,x_tau,v_tau,a,b,tau,x_d,v_d,x_tau_d,v_tau_d,a_d,b_d,tau_d)
%SYM_BALANCING_RHS_1_3
%    [OUT1,OUT2] = SYM_BALANCING_RHS_1_3(X,V,X_TAU,V_TAU,A,B,TAU,X_D,V_D,X_TAU_D,V_TAU_D,A_D,B_D,TAU_D)

%    This function was generated by the Symbolic Math Toolbox version 8.6.
%    03-May-2022 22:42:24

out1 = 0.0;
if nargout > 1
    t2 = cos(x);
    t3 = sin(x);
    t4 = x_d.^3;
    out2 = -t2.*t4-t3.*t4.*(b.*v_tau+a.*x_tau)+t3.*x_d.*(b_d.*v_tau_d.*2.0+a_d.*x_tau_d.*2.0).*3.0+t2.*x_d.^2.*(b.*v_tau_d+b_d.*v_tau+a.*x_tau_d+a_d.*x_tau).*3.0;
end


function [out1,out2] = sym_balancing_rhs_1_4(x,v,x_tau,v_tau,a,b,tau,x_d,v_d,x_tau_d,v_tau_d,a_d,b_d,tau_d)
%SYM_BALANCING_RHS_1_4
%    [OUT1,OUT2] = SYM_BALANCING_RHS_1_4(X,V,X_TAU,V_TAU,A,B,TAU,X_D,V_D,X_TAU_D,V_TAU_D,A_D,B_D,TAU_D)

%    This function was generated by the Symbolic Math Toolbox version 8.6.
%    03-May-2022 22:42:25

out1 = 0.0;
if nargout > 1
    t2 = cos(x);
    t3 = sin(x);
    t4 = x_d.^4;
    out2 = t3.*t4-t2.*t4.*(b.*v_tau+a.*x_tau)+t2.*x_d.^2.*(b_d.*v_tau_d.*2.0+a_d.*x_tau_d.*2.0).*6.0-t3.*x_d.^3.*(b.*v_tau_d+b_d.*v_tau+a.*x_tau_d+a_d.*x_tau).*4.0;
end


function [out1,out2] = sym_balancing_rhs_1_5(x,v,x_tau,v_tau,a,b,tau,x_d,v_d,x_tau_d,v_tau_d,a_d,b_d,tau_d)
%SYM_BALANCING_RHS_1_5
%    [OUT1,OUT2] = SYM_BALANCING_RHS_1_5(X,V,X_TAU,V_TAU,A,B,TAU,X_D,V_D,X_TAU_D,V_TAU_D,A_D,B_D,TAU_D)

%    This function was generated by the Symbolic Math Toolbox version 8.6.
%    03-May-2022 22:42:25

out1 = 0.0;
if nargout > 1
    t2 = cos(x);
    t3 = sin(x);
    t4 = x_d.^5;
    out2 = t2.*t4+t3.*t4.*(b.*v_tau+a.*x_tau)-t3.*x_d.^3.*(b_d.*v_tau_d.*2.0+a_d.*x_tau_d.*2.0).*1.0e+1-t2.*x_d.^4.*(b.*v_tau_d+b_d.*v_tau+a.*x_tau_d+a_d.*x_tau).*5.0;
end

